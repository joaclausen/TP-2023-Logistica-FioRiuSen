/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.tp.logistica.fioriusen;

import com.mycompany.tp.logistica.fioriusen.dtos.SucursalDTO;
import com.mycompany.tp.logistica.fioriusen.entidades.Sucursal;
import com.mycompany.tp.logistica.fioriusen.enums.Estado;
import com.mycompany.tp.logistica.fioriusen.gestores.GestorSucursal;
import java.awt.Toolkit;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vulturius
 */
public class GestionarSucursal extends javax.swing.JPanel {

    /**
     * Creates new form GestionarSucursal
     */
    private JFrame ventana;
    private JPanel padre;
    
    public GestionarSucursal(JFrame ventana, JPanel padre) {
       this.ventana = ventana;
        this.padre = padre;
        
        ventana.setTitle("Gestionar sucursales - Búsqueda de sucursal");
        ventana.setSize(800, 700);
        initComponents();
        ventana.setVisible(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        panelBusqueda = new javax.swing.JPanel();
        txtCodigo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        labelCodigo = new javax.swing.JLabel();
        labelNombre = new javax.swing.JLabel();
        labelEstado = new javax.swing.JLabel();
        comboBoxEstado = new javax.swing.JComboBox<>();
        btnBuscar = new javax.swing.JButton();
        panelResultados = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaResultados = new javax.swing.JTable();
        btnCancelar = new javax.swing.JButton();
        btnNueva = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnProvision = new javax.swing.JButton();
        btnOrdenPendiente = new javax.swing.JButton();
        btnStock = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        panelBusqueda.setBorder(javax.swing.BorderFactory.createTitledBorder("Búsqueda sucursal"));

        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        labelCodigo.setText("Código:");

        labelNombre.setText("Nombre:");

        labelEstado.setText("Estado:");

        comboBoxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "OPERATIVA", "NO_OPERATIVA" }));

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBusquedaLayout = new javax.swing.GroupLayout(panelBusqueda);
        panelBusqueda.setLayout(panelBusquedaLayout);
        panelBusquedaLayout.setHorizontalGroup(
            panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBusquedaLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelCodigo)
                    .addComponent(labelEstado))
                .addGap(18, 18, 18)
                .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCodigo)
                    .addComponent(comboBoxEstado, 0, 200, Short.MAX_VALUE))
                .addGap(52, 52, 52)
                .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelBusquedaLayout.createSequentialGroup()
                        .addComponent(labelNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBuscar))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        panelBusquedaLayout.setVerticalGroup(
            panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBusquedaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCodigo)
                    .addComponent(labelNombre))
                .addGap(18, 18, 18)
                .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelEstado)
                    .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBuscar)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        panelResultados.setBorder(javax.swing.BorderFactory.createTitledBorder("Resultados de búsqueda"));

        tablaResultados.setAutoCreateRowSorter(true);
        tablaResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Código", "Nombre", "Hora de apertura", "Hora de cierre", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaResultados);

        javax.swing.GroupLayout panelResultadosLayout = new javax.swing.GroupLayout(panelResultados);
        panelResultados.setLayout(panelResultadosLayout);
        panelResultadosLayout.setHorizontalGroup(
            panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 613, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelResultadosLayout.setVerticalGroup(
            panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultadosLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnNueva.setText("Cargar nueva sucursal");
        btnNueva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Acciones sobre sucursal seleccionada"));

        btnProvision.setText("Solicitar orden de provisión");
        btnProvision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProvisionActionPerformed(evt);
            }
        });

        btnOrdenPendiente.setText("Órdenes pendientes");
        btnOrdenPendiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenPendienteActionPerformed(evt);
            }
        });

        btnStock.setText("Gestionar stock");
        btnStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStockActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar sucursal");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar sucursal");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnStock, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnProvision))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnOrdenPendiente, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProvision)
                    .addComponent(btnStock))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOrdenPendiente)
                    .addComponent(btnModificar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(btnEliminar)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNueva)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancelar)
                        .addGap(6, 6, 6))
                    .addComponent(panelResultados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(panelBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelResultados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnNueva)
                        .addComponent(btnCancelar))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void btnNuevaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaActionPerformed
        ventana.setContentPane(new AltaSucursal(ventana, padre));
        ventana.revalidate();
    }//GEN-LAST:event_btnNuevaActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        int result = JOptionPane.showConfirmDialog(this, "¿Desea regresar al Menú Principal?", "CONFIRMACION", JOptionPane.YES_NO_OPTION);
        switch (result) {
            case JOptionPane.YES_OPTION:

                ventana.setContentPane(new Menu(ventana, this));
                ventana.revalidate();
                break;
            case JOptionPane.NO_OPTION:
                break;
        }


    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnProvisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProvisionActionPerformed
       DefaultTableModel model = (DefaultTableModel)tablaResultados.getModel();
       
         int fila = tablaResultados.getSelectedRow();
        if(fila==-1){
            JOptionPane.showMessageDialog(this, "Por favor seleccione una sucursal de la tabla.", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
        }else{
            SucursalDTO sucursalDTO = new SucursalDTO();
            sucursalDTO.setId(Integer.parseInt(model.getValueAt(fila, 0).toString()));
            sucursalDTO.setCodigo(model.getValueAt(fila,1).toString());
            sucursalDTO.setNombre(model.getValueAt(fila, 2).toString());
            ventana.setContentPane(new OrdenProvision(ventana, this, sucursalDTO));
            ventana.revalidate();
        }
        
        
       
    }//GEN-LAST:event_btnProvisionActionPerformed

    private void btnStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStockActionPerformed
          DefaultTableModel model = (DefaultTableModel)tablaResultados.getModel();
       
         int fila = tablaResultados.getSelectedRow();
        if(fila==-1){
            JOptionPane.showMessageDialog(this, "Por favor seleccione una sucursal de la tabla.", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
        }else{
             ventana.setContentPane(new ControlStock(ventana, this, model.getValueAt(fila, 2).toString(), model.getValueAt(fila, 0).toString()));
        ventana.revalidate();
        }
       
    }//GEN-LAST:event_btnStockActionPerformed

    private void btnOrdenPendienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenPendienteActionPerformed
       DefaultTableModel model = (DefaultTableModel)tablaResultados.getModel();
      int fila = tablaResultados.getSelectedRow();
      String sucur= (String) model.getValueAt(fila, 2);
        ventana.setContentPane(new OrdenPendiente(ventana, this, sucur));
       ventana.revalidate();
    }//GEN-LAST:event_btnOrdenPendienteActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        GestorSucursal gs = new GestorSucursal();
         Estado estado = Estado.valueOf(comboBoxEstado.getSelectedItem().toString());
         SucursalDTO dto = new SucursalDTO(txtCodigo.getText(), txtNombre.getText(),"0" ,"0" , estado);
         //CUIDADO CON LA LÍNEA DE ARRIBA-NO SE PUEDE PONER NULL EN el CONSTRUCTOR, XQ FALLA LA COmparacion
         //en el gestor, por eso puse 0
         int[] mensaje = gs.validarDatos(dto);
       Boolean control = true;
        if(mensaje[1] == 1){
             JOptionPane.showMessageDialog(this, "El campo Código solo puede contener números", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
            control=false;
             Toolkit.getDefaultToolkit().beep();
        }
        if(mensaje[2] == 1){
            JOptionPane.showMessageDialog(this, "El campo Nombre debe ser alfabético", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
            control=false;
             Toolkit.getDefaultToolkit().beep();
        }
        
        if(control == true){
            //ACA VA LA BÚSQUEDA
             List<Sucursal> sucursalesDTO =  gs.buscarSucursalSegunCriterio(dto);
            DefaultTableModel model = (DefaultTableModel) tablaResultados.getModel();
            int filas = model.getRowCount();
                if(filas > 0)
                for(int i = model.getRowCount()-1; i>=0; i--){
                     model.removeRow(i);
                }
            if(sucursalesDTO.isEmpty()){
                 JOptionPane.showMessageDialog(this, "No se han encontrado sucursales con los criterios seleccionados.", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
                control=false;
                Toolkit.getDefaultToolkit().beep();
            }else{
                System.out.println("ID SUC: "+sucursalesDTO.get(0).getId());
                
            for (int i=0; i<sucursalesDTO.size(); i++){
            model.addRow(new Object[]{sucursalesDTO.get(i).getId(),sucursalesDTO.get(i).getCodigo(), sucursalesDTO.get(i).getNombre(),  sucursalesDTO.get(i).getHorarioApertura(), sucursalesDTO.get(i).getHorarioCierre(), sucursalesDTO.get(i).getEstado().toString()});
    }}
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel)tablaResultados.getModel();
        int fila = tablaResultados.getSelectedRow();
        if(fila==-1){
            JOptionPane.showMessageDialog(this, "Por favor seleccione una sucursal de la tabla.", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
        }else{
            Estado estado = Estado.valueOf(comboBoxEstado.getSelectedItem().toString());
            String id = model.getValueAt(fila, 0).toString();
            SucursalDTO dto = new SucursalDTO(model.getValueAt(fila, 1).toString(),
            model.getValueAt(fila, 2).toString(),
            model.getValueAt(fila,3).toString(),
            model.getValueAt(fila, 4).toString(),
            estado);
            System.out.println("Valores: "+ model.getValueAt(fila, 1).toString()+" "+model.getValueAt(fila,2).toString()+" "+ model.getValueAt(fila, 3).toString() );
            
            ventana.setContentPane(new ModificarSucursal(ventana, this, dto, id));
            ventana.revalidate();
        }
        
        
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        // TODO add your handling code here:
            DefaultTableModel model = (DefaultTableModel)tablaResultados.getModel();
        int fila = tablaResultados.getSelectedRow();
        if(fila==-1){
            JOptionPane.showMessageDialog(this, "Por favor seleccione una sucursal de la tabla.", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
        }else{
        //ELIMINAR ACCA
         int result = JOptionPane.showConfirmDialog(this,"¿Seguro de que desea eliminar la sucursal seleccionada?", "CONFIRMACION", JOptionPane.YES_NO_OPTION);
        switch (result){
            case JOptionPane.YES_OPTION:
            GestorSucursal gs = new GestorSucursal();
            
            gs.eliminarSucursal(model.getValueAt(fila, 0).toString()); //NO FUNCA
            
              JOptionPane.showMessageDialog(this, "Sucursal eliminada con éxito.", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
       int filas = model.getRowCount();
                if(filas > 0)
                for(int i = model.getRowCount()-1; i>=0; i--){
                     model.removeRow(i);
                }
            case JOptionPane.NO_OPTION:
            break;
        }
        
    }                                           


      
      
    }//GEN-LAST:event_btnEliminarActionPerformed
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNueva;
    private javax.swing.JButton btnOrdenPendiente;
    private javax.swing.JButton btnProvision;
    private javax.swing.JButton btnStock;
    private javax.swing.JComboBox<String> comboBoxEstado;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelCodigo;
    private javax.swing.JLabel labelEstado;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JPanel panelBusqueda;
    private javax.swing.JPanel panelResultados;
    private javax.swing.JTable tablaResultados;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
